package osman_kartal_ooad_hw1_p2;

import java.util.Observable;
import java.util.Observer;

/**
 * CurrentPhotoAndTextDisplay is a concrete class that implements Observer and
 * DisplayElement interfaces. It is one of the observer type.
 *
 * Whenever a new content is generated by Website class the update method
 * in this class is called so that new content can be changed with older one
 * and shown to the user.
 *
 * CurrentPhotoAndTextDisplay is the observer type that interests in photos and
 * texts that Website serves.
 *
 * @author Osman Kartal
 */
public class CurrentPhotoAndTextDisplay implements Observer, DisplayElement{
    /**
     * Used for communicate with Website Class so that new content
     * can be extracted.
     */
    Observable observable;

    /**
     * String that simulates a photograph data in a text format like
     * "image.jpeg"
     */
    private String photo;

    /**
     * String that simulates a text data.
     */
    private String text;

    /**
     * One parameter constructor
     * @param observable Observable that register this observer
     */
    CurrentPhotoAndTextDisplay(Observable observable) {
        this.observable = observable;
        observable.addObserver(this);
    }

    /**
     * Updates the old content and display new ones.
     *
     * @param obs Website
     * @param arg
     */
    public void update(Observable obs, Object arg) {
        if (obs instanceof Website) {
            Website website = (Website) obs;
            this.photo = website.getPhoto();
            this.text = website.getText();
            display();
        }
    }

    /**
     * Displays photo that currently arrived from subscribed Website.
     */
    public void display() {
        System.out.println("CurrentPhotoAndTextDisplay -> New photo: " + photo +
                " | New text: " + text);
    }
}
